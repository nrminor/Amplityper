params {
	
	// WORKFLOW PARAMETERS TO REVIEW AT EACH RUN
	// ----------------------------------------

    // Parent directory for input FASTQ files
    fastq_dir = ""

	// BED file of primer locations within each amplicon. 
	// NOTE: A BED file or a FASTA file must be specified
	primer_bed = "$launchDir/resources/qiaseq_direct_boosted.bed"
	
	// Where to place results
	results = "$launchDir/results"

	// Whether to map and assemble using Geneious Prime tools. 
	// Only use this setting if Geneious is installed  and 
	// licensed on your system.
	geneious_mode = true

	// Desired amplicon
	desired_amplicon = "QIAseq_168"

	// minimum number of reads required for a haplotype assembly
	min_reads = 4

	// Forward and reverse primer prefixes
	fwd_suffix = "_LEFT"
	rev_suffix = "_RIGHT"

	// whether to cleanup the work directory and delete all
	// intermediate files
	cleanup = false
	
	// WORKFLOW PARAMETERS THAT SHOULD NOT BE CHANGED
	// ----------------------------------------

	// Reference sequence for alignment in FASTA format
	reference = "$projectDir/resources/MN908947.3.fasta"

	// GFF file of SARS-CoV-2 gene annotations
	gff = "$projectDir/resources/GCF_009858895.2_ASM985889v3_genomic.gff"

	// default options for geneious assembly
	assembly_profile = "$projectDir/resources/sc2-haplotyping.optionprofile"
	
	// Find number of CPUs on system or node
	available_cpus = Runtime.getRuntime().availableProcessors() - 1
	
}


// WHETHER TO GENERATE A REPORT OF RUN STATISTICS
report {
	enabled = true
	overwrite = true
	file    = "${params.results}/report.html"
}


// WHETHER TO GENERATE A VISUALIZATION OF THE WORKFLOW
dag {
	enabled = true
	overwrite = true
	file = '$projectDir/assets/read-zap-visualization.png'
}


// WHETHER TO REMOVE TEMPORARY FILES AFTER A SUCCESSFUL RUN
cleanup = params.cleanup


// PROFILE OPTIONS
profiles {
	
	standard {
		
		docker.enabled = true
		apptainer.enabled = false
		conda.enabled = false
		
		process {

			withLabel: "general" {
				container = "nrminor/read-zap:v0.0.1"
			}
			withLabel: "iVar" {
				container = "andersenlabapps/ivar:1.3.1"
			}
		}
		
	}
	
	docker {
		
		docker.enabled = true
		apptainer.enabled = false
		conda.enabled = false

		process {

			withLabel: "general" {
				container = "nrminor/read-zap:v0.0.1"
			}
			withLabel: "iVar" {
				container = "andersenlabapps/ivar:1.3.1"
			}
		}
		
	}
	
	apptainer {
		
		apptainer.enabled = true
		apptainer.cacheDir = "work/apptainer/"
		apptainer.autoMounts = true
		docker.enabled = false
		conda.enabled = false
		
		process {

			withLabel: "general" {
				container = "nrminor/read-zap:v0.0.1"
			}
			withLabel: "iVar" {
				container = "andersenlabapps/ivar:1.3.1"
			}
		}
		
	}

}


// MANIFEST
manifest {
	homePage = 'https://github.com/nrminor/READ-ZAP'
	mainScript = 'main.nf'
	defaultBranch = 'main'
	description = 'Read Extraction And De novo assembly for Zero-error Amplicon Phasing'
	author = 'Nicholas Minor'
}